<public:component>
/*-----------------------------------------------------------------------------
-  Copyright (c) 2003 by Vitria Technology, Inc.
-  All Rights Reserved.
-
-  This SOURCE CODE FILE, which has been provided by Vitria as part
-  of a Vitria product for use ONLY by licensed users of the product,
-  includes information that is CONFIDENTIAL and PROPRIETARY to Vitria.
-
-  SOME API's contained herein are for INTERNAL USE ONLY and are NOT to
-  be used by ANY licensee of the product.  Vitria reserves the right
-  to change such API's at any time and is not required to support
-  them in current or future releases.
-
-  USE OF THIS SOFTWARE IS GOVERNED BY THE TERMS AND CONDITIONS
-  OF THE LICENSE STATEMENT AND LIMITED WARRANTY FURNISHED WITH
-  THE PRODUCT.
-
-  IN PARTICULAR, YOU WILL INDEMNIFY AND HOLD VITRIA HARMLESS FROM
-  AND AGAINST ANY CLAIMS OR LIABILITIES ARISING OUT OF THE USE,
-  REPRODUCTION, OR DISTRIBUTION OF YOUR PROGRAMS, INCLUDING ANY
-  CLAIMS OR LIABILITIES ARISING OUT OF OR RESULTING FROM THE
-  USE, MODIFICATION, OR DISTRIBUTION OF PROGRAMS OR FILES CREATED
-  FROM, BASED ON, AND/OR DERIVED FROM THIS SOURCE CODE FILE.
------------------------------------------------------------------------------*/
<public:attach event="onblur" onevent="blur_event()" />
<public:attach event="onkeydown" onevent="keydown_event()" />
<public:property name="maskType" />

<script language=JScript>
var type = maskType.toLowerCase();
var minDateYear = 1000;
var maxDateYear = 9999;

function keydown_event() {
    if (type=="zip") {
        zipKeyDown();
    }else if(type=="phone") {
        phoneKeyDown(value);
    }else if(type=="date") {
        dateKeyDown();
    }else if(type=="date1") {
        dateKeyDown();
    }else if(type=="number") {
        numKeyDown();
    }else if(type=="timeduration") {
        durationKeyDown();
    }else if(type=="time") {
        durationKeyDown();
    }
}

function blur_event() {
    if (type=="zip") {
        maskZip(value);
    }else if(type=="phone") {
        maskPhone(value);
    }else if(type=="date") {
        maskDate(value);
    }else if(type=="date1") {
        maskDate1(value);
    }else if(type=="number") {
        maskNum(value);
    }else if(type=="timeduration") {
        maskDuration(value);
    }else if(type=="time") {
        maskTime(value);
    }
}

function numKeyDown() {
    if (event.ctrlKey) return;
    if (event.shiftKey) {
        event.returnValue = false;
        return;
    }
    var k = event.keyCode;
    if (!numericEditKey(k))
        event.returnValue = false;
}

function zipKeyDown() {
    if (event.ctrlKey) return;
    var k = event.keyCode;
    if (!numericEditKey(k) && k!=189) // hyphen -
        event.returnValue = false;
}

function phoneKeyDown(v) {
    if (event.ctrlKey) return;
    var k = event.keyCode;
    if (!numericEditKey(k) && k!=190 && k!=189) // period ., hyphen -
        event.returnValue = false;
}

function durationKeyDown() {
    if (event.ctrlKey) return;
    var k = event.keyCode;
    if (!numericEditKey(k) && k!=186) // ;
        event.returnValue = false;
}

function dateKeyDown() {
    if (event.ctrlKey) return;
    var k = event.keyCode;
    if (!numericEditKey(k) && k!=191 && k!=189)  // slash /, hyphen -
        event.returnValue = false;
}

function maskPhone(v) {
    if (v.length==0) return;
    var mask = stripChr(v);

    if (mask.length==7) {
        mask = mask.substring(0,3) + "-" + mask.substring(3,7);
    }else if(mask.length==10) {
        mask = "(" + mask.substring(0,3) + ") " + mask.substring(3,6) + "-" + mask.substring(6,10);
    }else {
        select();
        alert("Invalid phone number.\r\rA phone number should contain 7 or 10 numbers.");
        return;
    }

    value = mask;
}

function maskZip(v) {
    if (v.length==0) return;
    var mask = stripChr(v);

    if (mask.length!=5 && mask.length!=9) {
        select();
        alert("Invalid zip code.\r\rA zip code should contain 5 or 9 numbers.");
        return;
    }else if (mask.length==9) {
        mask = mask.substring(0,5) + "-" + mask.substring(5,9);
    }

    value = mask;
}

//function maskDate(v) {
//    if (v.length==0) return;
//    v = v.replace(/-/g, "/");
//    var theDate = new Date(v);
//    if (isNaN(theDate)) {
//        select();
//        alert("Invalid date.\r\rA date should take the form 'mm/dd/yyyy'.");
//        return;
//    }
//    var d = theDate.getDate();
//    var m = theDate.getMonth() + 1;
//    var y = theDate.getFullYear();
//    var i = v.lastIndexOf("/");
//    if (i>2) {
//        v = v.substring(i+1, v.length)
//        i = parseInt(v);
//        if (i<10)
//            y = "200" + i;
//        else if (i<40)
//            y = "20" + i;
//    }
//    if (parseInt(y) < minDateYear) y = minDateYear;
//    if (parseInt(y) > maxDateYear) y = maxDateYear;
//
//    value = m + "/" + d + "/" + y;
//}

/*********************************************
* 返回yyyy/mm/dd/hh/mm/ss
*
**********************************************/
function maskDate(v) {
    if (v.length==0) return;
    v = v.replace(/-/g, "/");

    var arr;
    var y;
    var m;
    var d;
    var h;
    var min;
    var s;
    var i;
	var theDate;

    arr=v.split("/");
    if (arr.length>=3 && arr.length<=6){
    	for (i=0;i<6-arr.length;i++){
    		v+="/00";
    	}
    }else{
        v="1899/12/31/00/00/00";
    }




    arr=v.split("/");

    y=arr[0];
    m=arr[1];
    d=arr[2];
    h=arr[3];
    min=arr[4];
    s=arr[5];

    //年
    i=new Number(y);
    if (i>2055){
        y="2055";
    }else if (i<1899 ){
        y="1899";
    }

    //月
    i=new Number(m);
    if (i>12){
        m="12";
    }else if (i==0){
        m="01";
    }else if (i<10 ){
        m="0"+i;
    }

    //日
    i=new Number(d);
    if (i>31){
        d="31";
    }else if ( i==0){
        d="01";
    }else if (i<10 ){
        d="0"+i;
    }

    //小时
    i=new Number(h);
    if (i>24){
        h="23";
    }else if (i<10 ){
        h="0"+i;
    }

    //分钟
    i=new Number(min);
    if (i>60){
        min="59";
    }else if (i<10 ){
        min="0"+i;
    }

    //秒
    i=new Number(s);
    if (i>60){
        s="59";
    }else if (i<10 ){
        s="0"+i;
    }
    value=y+"/"+m+"/"+d+"/"+h+"/"+min+"/"+s;
}

/*********************************************
* 返回yyyy/mm/dd/hh/mm
*
**********************************************/
function maskDate1(v) {
    if (v.length==0) return;
    v = v.replace(/-/g, "/");

    var arr;
    var y;
    var m;
    var d;
    var h;
    var min;
    var s;
    var i;

    arr=v.split("/");
    if (arr.length>=3 && arr.length<=5){
    	for (i=0;i<5-arr.length;i++){
    		v+="/00";
    	}
    }else{
    	alert("输入的日期格式不对");
        v="1899/12/31/00/00";
    }

    arr=v.split("/");

    y=arr[0];
    m=arr[1];
    d=arr[2];
    h=arr[3];
    min=arr[4];
    s=arr[5];

    //年
    i=new Number(y);
    if (i>2055){
        y="2055";
    }else if (i<1899 ){
        y="1899";
    }

    //月
    i=new Number(m);
    if (i>12){
        m="12";
    }else if (i==0){
        m="01";
    }else if (i<10 ){
        m="0"+i;
    }

    //日
    i=new Number(d);
    if (i>31){
        d="31";
    }else if ( i==0){
        d="01";
    }else if (i<10 ){
        d="0"+i;
    }

    //小时
    i=new Number(h);
    if (i>24){
        h="23";
    }else if (i<10 ){
        h="0"+i;
    }

    //分钟
    i=new Number(min);
    if (i>60){
        min="59";
    }else if (i<10 ){
        min="0"+i;
    }

    value=y+"/"+m+"/"+d+"/"+h+"/"+min;
}
function maskNum(v) {
    if (v.length==0) return;
    value = stripChr(v);
}

function maskDuration(v) {
    if (v.length==0) return;
    var mask = stripTimeChr(v);
    if (mask.length==0) {
        value = mask;
        return;
    }
    var i = mask.indexOf(":");
    if (i>-1) {
        i = mask.indexOf(":", i+1);
        if (i>-1) {
            i = mask.indexOf(":", i+1);
            if (i>-1)
                mask = mask.substring(0, i)
        }
    }
    var timeArr = mask.split(":");
    var h=0, m=0, s=0;

    if (timeArr[0]=="") timeArr[0] = "0";
    if (timeArr[1]=="") timeArr[1] = "0";
    if (timeArr[2]=="") timeArr[2] = "0";

    if (timeArr.length==1) {
        s = parseInt(timeArr[0]);
    }else if(timeArr.length==2) {
        m = parseInt(timeArr[0]);
        s = parseInt(timeArr[1]);
    }else {
        h = parseInt(timeArr[0]);
        m = parseInt(timeArr[1]);
        s = parseInt(timeArr[2]);
    }
    if (s>59) {
        t = parseInt(s / 60);
        s = s - (t*60);
        m += t;
    }
    if (m>59) {
        t = parseInt(m / 60);
        m = m - (t*60);
        h += t;
    }
    if (s<10) s = "0" + s;
    if (m<10) m = "0" + m;
    if (h<10) h = "0" + h;
    value = h + ":" + m + ":" + s;
}

function maskTime(v) {
    if (v.length==0) return;
    var mask = stripTimeChr(v);
    if (mask.length==0) {
        value = mask;
        return;
    }
    var i = mask.indexOf(":");
    if (i>-1) {
        i = mask.indexOf(":", i+1);
        if (i>-1) {
            i = mask.indexOf(":", i+1);
            if (i>-1)
                mask = mask.substring(0, i)
        }
    }
    var timeArr = mask.split(":");
    var h=0, m=0, s=0;

    if (timeArr[0]=="") timeArr[0] = "0";
    if (timeArr[1]=="") timeArr[1] = "0";
    if (timeArr[2]=="") timeArr[2] = "0";

    if (timeArr.length==1) {
        h = parseInt(timeArr[0]);
    }else if(timeArr.length==2) {
        h = parseInt(timeArr[0]);
        m = parseInt(timeArr[1]);
    }else {
        h = parseInt(timeArr[0]);
        m = parseInt(timeArr[1]);
        s = parseInt(timeArr[2]);
    }
    if (s>59) {
        t = parseInt(s / 60);
        s = s - (t*60);
        m += t;
    }
    if (m>59) {
        t = parseInt(m / 60);
        m = m - (t*60);
        h += t;
    }
    if (h>23) h = 23;
    if (s<10) s = "0" + s;
    if (m<10) m = "0" + m;
    if (h<10) h = "0" + h;
    value = h + ":" + m + ":" + s;
}

/*
 * Returns true if key is a number or one of the following: backspace, tab, delete, left arrow, right arrow
 */
function numericEditKey(k) {
    var c = String.fromCharCode(k);
    if (isNaN(c)) {
        if (k!=8 && k!=9 && k!=46 && k!=37 && k!=39 &&
        	k!=96 && k!=97 && k!=98 && k!=99 && k!=100 &&
        	k!=101 && k!=102 && k!=103 && k!=104 && k!=105)  //backspace, tab, delete, left arrow, right arrow
            return false;
    }
    return true;
}

/*
 * Strips out characters that aren't numbers
 */
function stripChr(v) {
    var n="", chr, i;
    if (v.length>0) {
        for (i=0; i<v.length; i++) {
            chr = v.charAt(i);
            if (!isNaN(chr) && chr!=" ") n += chr;
        }
    }
    return n;
}

function stripTimeChr(v) {
    var n = "";
    if (v.length>0) {
        for (var i=0; i<v.length; i++) {
            chr = v.charAt(i);
            if ((!isNaN(chr) && chr!=" ") || chr==":") n += chr;
        }
    }
    return n;
}
</script>
</public:component>
